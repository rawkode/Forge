name: Copilot Environment Setup

on:
  workflow_dispatch:
  push:
    branches: [ main, develop ]
    paths:
      - 'devenv.nix'
      - '.github/workflows/copilot-environment.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'devenv.nix'
      - '.github/workflows/copilot-environment.yml'

jobs:
  validate-devenv:
    runs-on: ubuntu-latest
    name: Validate Development Environment
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Nix
      uses: cachix/install-nix-action@v24
      with:
        nix_path: nixpkgs=channel:nixos-unstable

    - name: Setup devenv
      uses: DeterminateSystems/devenv-action@v1

    - name: Validate devenv configuration
      run: |
        devenv ci

    - name: Test Rust environment
      run: |
        devenv shell -- rustc --version
        devenv shell -- cargo --version
        devenv shell -- rustfmt --version
        devenv shell -- clippy-driver --version

    - name: Test Bun environment  
      run: |
        devenv shell -- bun --version

    - name: Test development scripts
      run: |
        devenv shell -- hello
        
    - name: Create sample Rust project and test
      run: |
        mkdir -p test-rust
        cd test-rust
        devenv shell -- cargo init --name test-project --bin
        devenv shell -- cargo check
        devenv shell -- cargo fmt --check
        cd ..
        rm -rf test-rust

    - name: Create sample Bun project and test
      run: |
        mkdir -p test-bun  
        cd test-bun
        devenv shell -- bun init -y
        echo 'console.log("Hello from Bun!");' > index.ts
        devenv shell -- bun run index.ts
        cd ..
        rm -rf test-bun

  setup-copilot-environment:
    runs-on: ubuntu-latest
    name: Setup Copilot Development Environment
    needs: validate-devenv
    if: github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Nix
      uses: cachix/install-nix-action@v24
      with:
        nix_path: nixpkgs=channel:nixos-unstable

    - name: Setup devenv
      uses: DeterminateSystems/devenv-action@v1

    - name: Initialize development environment
      run: |
        echo "ðŸš€ Initializing Forge development environment..."
        devenv shell -- hello
        
    - name: Generate environment report
      run: |
        echo "# Forge Development Environment Report" > environment-report.md
        echo "" >> environment-report.md
        echo "## Tool Versions" >> environment-report.md
        echo "" >> environment-report.md
        echo "- **Rust**: $(devenv shell -- rustc --version)" >> environment-report.md  
        echo "- **Cargo**: $(devenv shell -- cargo --version)" >> environment-report.md
        echo "- **Bun**: $(devenv shell -- bun --version)" >> environment-report.md
        echo "- **Nix**: $(nix --version)" >> environment-report.md
        echo "" >> environment-report.md
        echo "## Available Scripts" >> environment-report.md
        echo "" >> environment-report.md
        echo "- \`hello\` - Welcome message" >> environment-report.md
        echo "- \`format\` - Format Rust and JS/TS code" >> environment-report.md
        echo "- \`lint\` - Lint Rust and JS/TS code" >> environment-report.md
        echo "- \`test\` - Run tests for Rust and JS/TS" >> environment-report.md
        echo "" >> environment-report.md
        echo "Generated on: $(date)" >> environment-report.md

    - name: Upload environment report
      uses: actions/upload-artifact@v4
      with:
        name: environment-report
        path: environment-report.md
        retention-days: 30